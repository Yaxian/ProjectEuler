#encoding:utf-8
"""
在下列的1000位数中，寻找4个相邻的数字相乘，找出最大值
找到9989. 9*9*8*9 =。。。
 问题来了，
 在下列的1000位数中，寻找13个相邻的数字相乘，找出最大值
函数外面的变量是全局变量。
函数内部的变量是局部变量。
"""


s="""
73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450
"""
s=s.replace("\n","")
print len(s)
print "9989" in s



def findMax(start,end):
	"""
	@start,end:表示在字符串中切片的开始位置

	"""
	s_max=0
	ad_digit = []
	for i in range(start,end):
		temp=1
		sub = s[i:i+13]
		if (i>0 and sub[-1]<=s[i-1]):
			continue
		for j in range(0,len(sub)):
			if (sub[j] =="0"):
				break
			temp *= int(sub[j])
		if temp>=s_max:
			s_max=temp
			ad_digit = sub
	return s_max,ad_digit

print findMax(0,1000-13)

def find_adjacent():
	maxx=0
	for i in range(0,len(s)-13):
		tem =1
		sub = s[i:i+13]
		for j in range(0,len(sub)):
			tem*=int(sub[j])
		if tem>=maxx:
			maxx=tem
	return maxx

print find_adjacent()
